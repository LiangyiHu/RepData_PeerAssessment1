head(rownames(a),3)
a <- available.packages()
head(rownames(a),3)
View(a)
install.packages("KernSmooth")
KernSmooth.copyright
library(KernSmooth)
search()
find.package("devtools")
install.packages("devtools")
library(devtools)
library(devtools)
getwd()
getwd()
y<-if x<4 10 0
y<-if (x<4) 10 0
y<-if (x<4) {10} 0
y<-if (x<4) {10} {0}
y
x<-3
y<-if (x<4) {10} else {0}
y
y
x<-3
y<-if (x<4) {10} else if (x<1) {5} else {0}
y
x<-3
y<-if (x>4) {10} else if (x<1) {5} else {0}
y
x<-0
y<-if (x>4) {10} else if (x<1) {5} else {0}
y
x<-0
y<-if(x>4){10}else if (x<1) {5} else {0}
y
x<-0
y<-if(x>4){10}else if(x<1){5}else{0}
y
x<-0
y<-if(x>4){10}elseif(x<1){5}else{0}
y
x<-0
y<-if(x>4){10}else if(x<1){5}else{0}
y
if true {print (1)} else if(FALSE){print(0)}
if TRUE {print (1)} else if(FALSE){print(0)}
if (TRUE) {print (1)} else if(FALSE){print(0)}
if (FALSE) {print (1)} else if(FALSE){print(0)}
if (FALSE) {print (1)} else if(TRUE){print(0)}
for(i in 1:10){print i}
for(i in 1:10){print (i)}
for(i in 1:10) print (i)
for(i in 1:10)
print (i)
for(i in 1:10)
print (i)
for(i in 1:10)
print (i)
print (5)
for(i in 1:10)
print (i)
print (5)
for(i in 1:10)
{print (i)
print (5)}
while x<10 print (x) x<-x+1
while (x<10) print (x) x<-x+1
while (x<10) {print (x) x<-x+1}
while (x<10) print (x),x<-x+1
while (x<10) print (x);x<-x+1
while (x<10) {print (x);x<-x+1
}
x<-5
while (x<10) {print (x);x<-x+1
}
}
while (x<10) {print (x);x<-x+1
}
while (x<10) {print (x);x<-x+1}
x=1
x+=1
x
x=1
x++
x
x=4,y=5
add2(x,y)
add2<-function(x,y){x^2; x+y}
x=4,y=5
add2(x,y)
x=4;y=5
add2(x,y)
add2<-function(x,y){x^2; (x^2,x+y)}
x=4;y=5
add2(x,y)
add2<-function(x,y){x^2; c(x^2,x+y)}
x=4;y=5
add2(x,y)
above10<-function(x) x[x>10]
x<-c(3,4,5,6,10,11,13,14,5)
above10(x)
above10(x)
above10<-function(x) x[x>=10]
above10(x)
above10<-function(x,n=12) x[x>=10]
above10(x)
above10<-function(x,n=12) x[x>=10]
above10<-function(x,n=12) x[x>=n]
above10(x)
above10(x,8)
above10(x,4)
above10<-function(x,n=11) x[x==n]
above10(x,4)
above10<-function(x,n=11) x[x=n]
above10(x,4)
lm
y<-10
f<-function(x){y<-2
y^2+g(x)}
g<-function(x){x^y}
f(3)
getwd()
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = FALSE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
a<-1:5
b<-c(1:5)
identical(a,b)
a<-1:20
dim(a)<-4:5
a
b<-a
a
b
b[2,3]<-10
b
b[1,3]<-10
b
a
library(lattice)
?xyplot
detach()
detach(lattice)
library(ggplot2)
qplot(displ,hwy,data=mpg,color=drv)
ï¼Ÿqplot
?qplot
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(displ,hwy,data=mpg,facets=drv~.)
qplot(hwy,data=mpg,facets=drv~.)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
?ggplot
a<-rnorm(30)
a
seq(0,1,length=4)
cutpoints<-quantile(a,seq(0,1,length=4),na.rm=TRUE)
cutpoints
class(cutpoints)
sort(a)
a
b<-cut(a,cutpoints)
b
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
BodyWeight
?lines
?xyplot
?axis
?points
?llines
?splom
?par
?trellis.par.set
airquality
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
movies
dim(movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
set.seed(13435)
x<-data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
x
x[sample(1:5),]
names(x)
rowNames(x)
rowName(x)
rowname(x)
rownames(x)
rownames(x)<-c("aiya","wori","xili","bili","gill")
rownames(x)
x
x[sample(1:5),]
set.seed(13435)
x<-data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
x<-x[sample(1:5),];x$var2[c(1,3)]=NA
x
order(x)
?order
?sort
library(plyr)
arrange(x,var1)
arrange(x,desc(var1))
x[,4]<-rnorm(5)
x
f <- factor(sample(runif(5), 20, replace = TRUE))
levels(f)
class(levels(f))
as.character(f)
as.numeric(levels(f))
f
class(as.numeric(levels(f)))
f[c(1,1,2,2,1,2,1,1,1,2,2,2,2)]
?table
?xtabs
?Freq
a<-rnorm(100)
table(cut(a,breaks=quantile(a)))
length(a)
cut(a,breaks=quantile(a))
a
quantile(a)
signif(4500.11,digits=3)
signif(4500.11,digits=5)
signif(4512.11,digits=5)
signif(4512.11,digits=2)
mtcars
?melt
carMelt<-melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
library(reshape2)
?melt
carMelt<-melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
mtcars$carname<-rownames(mtcars)
carMelt<-melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
carMelt
?unlist
?arrange
library(jpeg)
library(dplyr)
library(dplyr)
library(jpeg)
search(jpeg)
ls("package:jpeg")
?readJPEG
?readJPEG
library(swirl)
swirl()
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv,stringAs Factors=FALSE)
?read.csv
mydf<-read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm('mydf')
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
select(cran,-(X:size))
-5:20
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="IN"|country=="US")
filter(cran,size>100500, r_os=="linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^20)
mutate(cran3, size_mb = size / 2^20,size_gb=size_mb/2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
mydf<-read.csv(path2csv)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?nrow
submit()
?n
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs = 0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
gather(students2,sex_class,count,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,col=sex_class,into=c("sex","class"))
submit()
students3
?gather
submit()
submit()
?spread
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
?bind_rows
bind_rows(passed,failed)
sat
?select
?separate
submit()
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_data<-ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
mhs("03:22:14")
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours=hours(now()),minutes=minutes(now()))
skip()
this_moment
nyc<-now(tz="America/New_York")
nyc
nyc + days(2)
depart<-nyc + days(2)
depart
depart<-depart+hours(17)+minutes(34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-withtz(arrive,tz="Asia/Hong_Kong")
arrive<-with_tz(arrive,tz="Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long(last_time,arrive)
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
?scale
svd
?svd
x<-matrix(rpois(30),nrow=5)
x<-matrix(rpois(30,5),nrow=5)
x
svd(x)
a<-svd(x)
a[2] %*% a[1] %*% t(a[3])
a[2] %*% t(a[1]) %*% t(a[3])
a[2]
as.matrix(a[2])
unlist(a[2])
a[1] %*% t(a[3])
class(a)
unlist(a)
a
unname(a)
aa<-unname(a)
aa[1]
aa[[1]]
x<-matrix(rpois(30,5),nrow=5)
a<-svd(x)
a
unname(a)[2]
class(unname(a)[2])
class(unname(a)[[2]])
u<-a[[2]]
u
d<-a[[1]]
v<-a[[3]]
u %*% d
u %*% d %*% t(v)
(u %*% d) %*% t(v)
t(u %*% d) %*% t(v)
u%*%t(d)
u %*% t(d)
x
u
d
v
v<-t(v)
v
x
u
d
v
u %*% d
?diag
a<-svd(x,nu=nrow(x),nv=ncol(x))
a
svd(x)
getwd()
setwd("../desktop/learning/reproducibleresearch/RepData_PeerAssessment1")
meanperday<-mean(TotalByDay$totalsteps)
